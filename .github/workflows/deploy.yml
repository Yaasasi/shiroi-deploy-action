name: Build Shiroi and Upload Artifact
on:
  push:
    branches:
    - main
  repository_dispatch:
    types:
    - trigger-workflow
permissions: write-all
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  HASH_FILE: build_hash
jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    if: ${{ github.event.head_commit.message != 'Update hash file' }}
    outputs:
      hash_content: ${{ steps.read_hash.outputs.hash_content }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Read HASH_FILE content
      id: read_hash
      run: 'content=$(cat ${{ env.HASH_FILE }}) || true

        echo "hash_content=$content" >> "$GITHUB_OUTPUT"

        '
  check:
    name: Check Should Rebuild
    runs-on: ubuntu-latest
    needs: prepare
    outputs:
      canceled: ${{ steps.use_content.outputs.canceled }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: innei-dev/shiroi
        token: ${{ secrets.GH_PAT }}
        fetch-depth: 0
        lfs: true
    - name: Use content from prev job and compare
      id: use_content
      env:
        FILE_HASH: ${{ needs.prepare.outputs.hash_content }}
      run: "file_hash=$FILE_HASH\ncurrent_hash=$(git rev-parse --short HEAD)\necho \"File Hash: $file_hash\"\necho \"Current\
        \ Git Hash: $current_hash\"\nif [ \"$file_hash\" == \"$current_hash\" ]; then\n  echo \"Hashes match. Stopping workflow.\"\
        \n  echo \"canceled=true\" >> $GITHUB_OUTPUT\nelse\n  echo \"Hashes do not match. Continuing workflow.\"\nfi\n"
  build:
    name: Build artifact
    runs-on: ubuntu-latest
    needs: check
    if: ${{needs.check.outputs.canceled != 'true'}}
    strategy:
      matrix:
        node-version:
        - lts/*
    outputs:
      sha_short: ${{ steps.store.outputs.sha_short }}
      branch: ${{ steps.store.outputs.branch }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: innei-dev/shiroi
        token: ${{ secrets.GH_PAT }}
        fetch-depth: 0
        lfs: true
    - name: Checkout LFS objects
      run: git lfs checkout
    - uses: pnpm/action-setup@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: pnpm
    - uses: jongwooo/next-cache@v1
    - name: Install dependencies
      run: pnpm install
    - name: Build project
      run: 'sh ./ci-release-build.sh

        '
    - name: Cache Build Artifacts
      id: cache-primes
      uses: actions/cache/save@v4
      with:
        path: assets
        key: ${{ github.run_number }}-release
    - name: Store artifact commit version
      shell: bash
      id: store
      run: 'sha_short=$(git rev-parse --short HEAD)

        branch_name=$(git rev-parse --abbrev-ref HEAD)

        echo "sha_short=$sha_short" >> "$GITHUB_OUTPUT"

        echo "branch=$branch_name" >> "$GITHUB_OUTPUT"

        '
  store:
    name: Store artifact commit version
    runs-on: ubuntu-latest
    needs:
    - deploy
    - build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0
    - name: Use outputs from build
      env:
        SHA_SHORT: ${{ needs.build.outputs.sha_short }}
        BRANCH: ${{ needs.build.outputs.branch }}
      run: 'echo "SHA Short from build: $SHA_SHORT"

        echo "Branch from build: $BRANCH"

        '
    - name: Write hash to file
      env:
        SHA_SHORT: ${{ needs.build.outputs.sha_short }}
      run: echo $SHA_SHORT > ${{ env.HASH_FILE }}
    - name: Commit files
      run: 'git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

        git config --local user.name "github-actions[bot]"

        git add ${{ env.HASH_FILE }}

        git commit -a -m "Update hash file"

        '
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
  upload:
    name: Upload artifact
    needs: build
    runs-on: ubuntu-latest
    steps:
    - id: cache-primes-restore
      name: Restore cached Build Artifacts
      uses: actions/cache/restore@v4
      with:
        key: ${{ github.run_number }}-release
        path: 'assets

          '
    - name: Verify release.zip
      run: test -f assets/release.zip || { echo 'Missing assets/release.zip'; exit 1; }
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: shiroi-${{ needs.build.outputs.sha_short }}
        path: assets/release.zip
        if-no-files-found: error
        retention-days: 30
